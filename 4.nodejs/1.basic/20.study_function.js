// 자습 - 함수
// cf. ES6(= ECMAScript2015) 기능은 구버전 웹브라우저에서 지원하지 않을 수 있다.

// 즉시 실행 함수
/* 
(function sub(a, b) {
    console.log(a - b);
}) (10, 5);
 */
// sub(10, 5); // 즉시 실행 함수는 실행 즉시 제거되서, 재호출 불가능

// 1. const gugudan = function multiply() { // 네이밍 함수.
// 표현식 형태로 함수를 정의했으면, 함수 이름으로 호출 불가능. 변수명이 곧 함수 식별자이므로 변수명()으로 호출해야 한다.

// 2. const gugudan = function () { // 익명 함수

// 3. 화살표 함수. 간결하지만 중첩된다든지 하면 헷갈리기 쉽다.
// ES6에서 추가된 함수 정의 방법으로, ES6를 지원하는 개발 환경에서는 가장 많이 사용되는 정의 방법
const gugudan = (dan = 1) => { // (dan = 1: 인자 없이 함수를 호출할 때, 매개변수 dan에 들어갈 기본값(undefined 대신. ES6 기능)
    for(let i = 1 ; i <= 9 ; i++ ) {
        console.log(`${dan} x ${i} = ${dan * i}`);
    }
}; // 블록문 끝에는 관례상 semi colon을 생략하지만, 변수에 할당하면 블록보다는 식으로 보는 게 타당해서 붙이는 편인 듯
// cf. '반복' 사용할 함수를 표현식 형태로 정의할 때는 const 키워드를 주로 사용 (재정의, 재할당 방지)

gugudan(9);
